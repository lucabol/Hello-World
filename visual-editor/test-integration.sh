#!/bin/bash
# Integration test for visual editor
# This script verifies that code generated by the visual editor compiles and runs correctly

set -euo pipefail  # Exit on error, undefined variables, and pipe failures

# Print versions for debugging
echo "Visual Editor Integration Test"
echo "================================"
echo ""
echo "Environment:"
echo "  GCC version: $(gcc --version | head -1)"
echo "  Bash version: ${BASH_VERSION}"
echo ""

# Create temporary working directory
TEMP_DIR=$(mktemp -d)
trap 'rm -rf "$TEMP_DIR"' EXIT

echo "Using temporary directory: $TEMP_DIR"
echo ""

# Test 1: Default Hello World
echo "Test 1: Default Hello World output"
cat > "$TEMP_DIR/test_visual_1.c" << 'EOF'
# include <stdio.h>

int main(){
    printf("Hello world!");
}
EOF

gcc -Wall -Wextra -Wpedantic -Wformat=2 -Wconversion -Wsign-conversion -Werror -std=c99 \
    -o "$TEMP_DIR/test_visual_1" "$TEMP_DIR/test_visual_1.c"
OUTPUT=$("$TEMP_DIR/test_visual_1")
if [ "$OUTPUT" = "Hello world!" ]; then
    echo "✓ Test 1 PASSED: Output matches expected 'Hello world!'"
else
    echo "✗ Test 1 FAILED: Expected 'Hello world!' but got '$OUTPUT'"
    exit 1
fi
echo ""

# Test 2: Multiple prints
echo "Test 2: Multiple print statements"
cat > /tmp/test_visual_2.c << 'EOF'
# include <stdio.h>

int main(){
    printf("Hello ");
    printf("world!");
}
EOF

gcc -Wall -Wextra -Wpedantic -Wformat=2 -Wconversion -Wsign-conversion -Werror -std=c99 \
    -o /tmp/test_visual_2 /tmp/test_visual_2.c
OUTPUT=$(/tmp/test_visual_2)
if [ "$OUTPUT" = "Hello world!" ]; then
    echo "✓ Test 2 PASSED: Multiple prints work correctly"
else
    echo "✗ Test 2 FAILED: Expected 'Hello world!' but got '$OUTPUT'"
    exit 1
fi
echo ""

# Test 3: Print with newline
echo "Test 3: Print with newline"
cat > /tmp/test_visual_3.c << 'EOF'
# include <stdio.h>

int main(){
    printf("Hello world!\n");
}
EOF

gcc -Wall -Wextra -Wpedantic -Wformat=2 -Wconversion -Wsign-conversion -Werror -std=c99 \
    -o /tmp/test_visual_3 /tmp/test_visual_3.c
OUTPUT=$(/tmp/test_visual_3)
if [ "$OUTPUT" = "Hello world!" ]; then
    echo "✓ Test 3 PASSED: Print with newline works correctly"
else
    echo "✗ Test 3 FAILED: Expected 'Hello world!' but got '$OUTPUT'"
    exit 1
fi
echo ""

# Test 4: Comments
echo "Test 4: Code with comments"
cat > /tmp/test_visual_4.c << 'EOF'
# include <stdio.h>

int main(){
    // This is a greeting
    printf("Hello world!");
}
EOF

gcc -Wall -Wextra -Wpedantic -Wformat=2 -Wconversion -Wsign-conversion -Werror -std=c99 \
    -o /tmp/test_visual_4 /tmp/test_visual_4.c
OUTPUT=$(/tmp/test_visual_4)
if [ "$OUTPUT" = "Hello world!" ]; then
    echo "✓ Test 4 PASSED: Comments work correctly"
else
    echo "✗ Test 4 FAILED: Expected 'Hello world!' but got '$OUTPUT'"
    exit 1
fi
echo ""

# Test 5: Exit code
echo "Test 5: Program exit code"
/tmp/test_visual_1
EXIT_CODE=$?
if [ $EXIT_CODE -eq 0 ]; then
    echo "✓ Test 5 PASSED: Exit code is 0"
else
    echo "✗ Test 5 FAILED: Expected exit code 0 but got $EXIT_CODE"
    exit 1
fi
echo ""

# Clean up
rm -f /tmp/test_visual_*

echo "================================"
echo "All tests PASSED! ✓"
echo ""
echo "The visual editor generates valid C code that:"
echo "  • Compiles with strict GCC flags"
echo "  • Produces correct output"
echo "  • Returns proper exit codes"
echo "  • Supports comments"
echo "  • Handles multiple print statements"
