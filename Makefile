# Makefile for Hello World C Program
# Provides standardized build targets for development and CI

# Compiler settings
CC = gcc
CLANG = clang
SRC = hello.c
TARGET = hello
TARGET_DEBUG = hello_debug
TARGET_CLANG = hello_clang

# Standard flags (consistent across builds)
STD_FLAGS = -std=c99

# Compiler flags
CFLAGS_BASIC = -Wall -Wextra $(STD_FLAGS)
CFLAGS_STRICT = -Wall -Wextra -Wpedantic -Wformat=2 -Wconversion -Wsign-conversion -Werror $(STD_FLAGS)
CFLAGS_DEBUG = -g -Wall -Wextra $(STD_FLAGS)
CFLAGS_OPTIMIZED = -O2 -Wall -Wextra $(STD_FLAGS)

# Validation script (must exist in repository and be executable)
# The script supports --quiet flag for CI environments
VALIDATE_SCRIPT = test/validate.sh

# Declare phony targets
.PHONY: all strict debug clang test test-quiet clean help

# Default target: basic build
all: $(TARGET)

$(TARGET): $(SRC)
	$(CC) $(CFLAGS_BASIC) -o $@ $<

# Strict build (CI-quality with -Werror)
# This target is used by CI and should match validation requirements
strict: $(SRC)
	$(CC) $(CFLAGS_STRICT) -o $(TARGET) $<

# Debug build
debug: $(SRC)
	$(CC) $(CFLAGS_DEBUG) -o $(TARGET_DEBUG) $<

# Clang build (alternative compiler)
clang: $(SRC)
	$(CLANG) $(CFLAGS_BASIC) -o $(TARGET_CLANG) $<

# Run validation tests
# Expects: test/validate.sh to exist and be executable
# Exit code: 0 on success, non-zero on failure (propagated from validation script)
test: strict
	@if [ ! -f $(VALIDATE_SCRIPT) ]; then \
		echo "Error: $(VALIDATE_SCRIPT) not found"; \
		exit 1; \
	fi
	@if [ ! -x $(VALIDATE_SCRIPT) ]; then \
		echo "Error: $(VALIDATE_SCRIPT) is not executable"; \
		exit 1; \
	fi
	bash $(VALIDATE_SCRIPT)

# Quiet test (minimal output for CI)
# Uses --quiet flag supported by the validation script
test-quiet: strict
	@if [ ! -f $(VALIDATE_SCRIPT) ]; then \
		echo "Error: $(VALIDATE_SCRIPT) not found"; \
		exit 1; \
	fi
	@if [ ! -x $(VALIDATE_SCRIPT) ]; then \
		echo "Error: $(VALIDATE_SCRIPT) is not executable"; \
		exit 1; \
	fi
	bash $(VALIDATE_SCRIPT) --quiet

# Clean build artifacts (only removes files generated by this Makefile)
clean:
	rm -f $(TARGET) $(TARGET_DEBUG) $(TARGET_CLANG) *.exe *.out *.o

# Help target
help:
	@echo "Available targets:"
	@echo "  all (default) - Build with basic warnings"
	@echo "  strict        - Build with strict flags (CI-quality)"
	@echo "  debug         - Build with debug symbols"
	@echo "  clang         - Build with Clang compiler"
	@echo "  test          - Run validation tests"
	@echo "  test-quiet    - Run tests with minimal output (CI)"
	@echo "  clean         - Remove build artifacts"
	@echo "  help          - Show this help message"
